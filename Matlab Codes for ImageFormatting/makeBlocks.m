function results = makeBlocks(rgbImage)
%Image Processing Function
%
% rgbImage - Input image.
% RESULTS - A scalar structure with the processing results.
%

%--------------------------------------------------------------------------
% Auto-generated by imageBatchProcessor App. 
%
% When used by the App, this function will be called for every input image
% file automatically. IM contains the input image as a matrix. RESULTS is a
% scalar structure containing the results of this processing function.
%
%--------------------------------------------------------------------------
[rows columns numberOfColorBands] = size(rgbImage)
blockSizeR = 256; % Rows in block.
blockSizeC = 256; % Columns in block.

% Figure out the size of each block in rows.
% Most will be blockSizeR but there may be a remainder amount of less than that.
wholeBlockRows = floor(rows / blockSizeR);
blockVectorR = [blockSizeR * ones(1, wholeBlockRows), rem(rows, blockSizeR)];
% Figure out the size of each block in columns.
wholeBlockCols = floor(columns / blockSizeC);
blockVectorC = [blockSizeC * ones(1, wholeBlockCols), rem(columns, blockSizeC)];

% Create the cell array, ca. 
% Each cell (except for the remainder cells at the end of the image)
% in the array contains a blockSizeR by blockSizeC by 3 color array.
% This line is where the image is actually divided up into blocks.
if numberOfColorBands > 1
    % It's a color image.
    ca = mat2cell(rgbImage, blockVectorR, blockVectorC, numberOfColorBands);
else
    ca = mat2cell(rgbImage, blockVectorR, blockVectorC);
end

% myFolder = 'E:\SP CUP 2018\Database\HTC-1-M7';
% filePattern = fullfile(myFolder, '*.jpg');
% jpegFiles   = dir(filePattern);
% for k = 1:length(jpegFiles)
%   baseFileName = jpegFiles(k).name;
%   fullFileName = fullfile(myFolder, baseFileName);

% Now export all the blocks.
numPlotsR = size(ca, 1);
numPlotsC = size(ca, 2);
for r = 1 : numPlotsR
    for c = 1 : numPlotsC
        rgbBlock = ca{r,c};
        results.blocks.block = ca{r,c};
        global m
        baseFileName = num2str(m);
        m = m+1;
        fname = strcat('image-', baseFileName,'--', num2str(r),'_',num2str(c), '.jpg');
        imwrite(rgbBlock, fname, 'jpg');
    end
end
%--------------------------------------------------------------------------